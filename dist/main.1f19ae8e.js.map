{"version":3,"sources":["node_modules/pandora-express/erc721/src/common/utils.js","node_modules/pandora-express/erc721/abi/pndc.js","node_modules/pandora-express/erc721/src/nft/mint.js","node_modules/pandora-express/erc721/abi/tokenfactory.js","node_modules/pandora-express/erc721/src/order/buy.js","node_modules/pandora-express/erc721/src/order/sell.js","node_modules/pandora-express/erc721/src/order/Bid.js","node_modules/pandora-express/erc721/abi/tokenerc721.js","node_modules/pandora-express/erc721/src/collection/collection.js","node_modules/pandora-express/erc1155/src/common/utils.js","node_modules/pandora-express/erc1155/abi/pndc1155.js","node_modules/pandora-express/erc1155/src/nft/mint.js","node_modules/pandora-express/erc1155/abi/tokenfactory1155.js","node_modules/pandora-express/erc1155/src/order/buy.js","node_modules/pandora-express/erc1155/src/order/sell.js","node_modules/pandora-express/erc1155/src/order/Bid.js","node_modules/pandora-express/erc1155/abi/tokenerc1155.js","node_modules/pandora-express/erc1155/src/collection/collection.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/adapters/xhr.js","C:/Users/nitish naidu/AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/process/browser.js","node_modules/axios/lib/defaults.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/axios.js","node_modules/axios/index.js","node_modules/form-data/lib/browser.js","node_modules/pandora-express/pinata/pinata.js","node_modules/pandora-express/index.js","main.js","C:/Users/nitish naidu/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","self","FormData","window","Mint721","require","Buy721","Sell721","Bid721","Collection721","Mint1155","Buy1155","Sell1155","Bid1155","Collection1155","Pinata","createPandoraExpressSDK","erc721","order","sellNFT","sellNFTByBid","sellNFTbyBid","cancelSale","buyNFT","acceptBid","bid","withdrawBid","nft","mint","batchMint","burn","collection","createCollection","deployCollection","createInstance","erc1155","pinata","upload","pinFileToIPFS","pinJSON","pinJSONToIPFS","pandoraSDK","init","ethereum","web3","Web3","enable","console","log","alert","mintNft","eth","getAccounts","accounts","net","getId","chainId","itemURI","value","sellNft","sellItemTokenId","sellItemPrice","buyNft","buyItemSaleId","buyItemAmmount","document","getElementById","createItemButton","onclick","itemURI1","itemURI2","sellItemButton","auctionItemTokenId","auctionItemPrice","auctionItemTime","numBuyItemAmmount","buyItemButton","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpouBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChwpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzyprptEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvnGA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClpvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;;;;ACAA;AACAzD,MAAM,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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const UTILS = {\r\n  addressDict: {\r\n    4: {\r\n      PNDC_ADDRESS: \"0x5484b4aee713de7845b2EDD70a7f3DF9c7d759d2\",\r\n      TOKENFACTORY_ADDRESS: \"0xF445100E121a1a482fa51C68B666C097f358E83F\",\r\n    },\r\n    3: {\r\n      PNDC_ADDRESS: \"0x0A8E0d51703ACa633B2c81c09e426baDCA9Ec7bC\",\r\n      TOKENFACTORY_ADDRESS: \"0x5484b4aee713de7845b2EDD70a7f3DF9c7d759d2\",\r\n    },\r\n    97: {\r\n      PNDC_ADDRESS: \"0xA7947BfBb94dFbE543972b17560055c01C042Ad3\",\r\n      TOKENFACTORY_ADDRESS: \"0x461e4431d7EB7461778DED88A315CB07D20d30Fb\",\r\n    },\r\n  },\r\n  accounts: async (web3) => {\r\n    return await web3.eth.getAccounts();\r\n  },\r\n  PNDC_instance: async (web3, chainId, abi) => {\r\n    return new web3.eth.Contract(abi, UTILS.PNDC_ADDRESS(chainId));\r\n  },\r\n  TOKENFACTORY_instance: async (web3, chainId, abi) => {\r\n    return new web3.eth.Contract(abi, UTILS.TOKENFACTORY_ADDRESS(chainId));\r\n  },\r\n  TOKENERC721_instance: async (web3, abi, collectionAddress) => {\r\n    return new web3.eth.Contract(abi, collectionAddress);\r\n  },\r\n  PNDC_ADDRESS: (id) => {\r\n    return UTILS.addressDict[id].PNDC_ADDRESS;\r\n  },\r\n  TOKENFACTORY_ADDRESS: (id) => {\r\n    return UTILS.addressDict[id].TOKENFACTORY_ADDRESS;\r\n  },\r\n};\r\n\r\nmodule.exports = UTILS;\r\n","const PNDC_ABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"symbol\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"RoyaltiesSetForTokenId\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getApproved\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"ownerOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"royaltiesByTokenId\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address payable\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint96\",\r\n        name: \"value\",\r\n        type: \"uint96\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"_data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"index\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenByIndex\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"index\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"uri\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"safeMint\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_totalNft\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"string[]\",\r\n        name: \"_uri\",\r\n        type: \"string[]\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[][]\",\r\n        name: \"royaltiesSet\",\r\n        type: \"tuple[][]\",\r\n      },\r\n    ],\r\n    name: \"batchMint\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"burn\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getRoyalties\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenURI\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"interfaceId\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    name: \"supportsInterface\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n];\r\n\r\nmodule.exports = { PNDC_ABI };\r\n","const UTILS = require(\"../common/utils\");\r\nconst { PNDC_ABI } = require(\"../../abi/pndc\");\r\n\r\nconst mint = async (web3, chainId, minterAddress, tokenURI, royalties) => {\r\n  const PNDC_instance = await UTILS.PNDC_instance(web3, chainId, PNDC_ABI);\r\n\r\n  let result = await PNDC_instance.methods\r\n    .safeMint(minterAddress, tokenURI, royalties)\r\n    .send({ from: minterAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst batchMint = async (\r\n  web3,\r\n  chainId,\r\n  minterAddress,\r\n  totalNFT,\r\n  uriArray,\r\n  royalties\r\n) => {\r\n  const PNDC_instance = await UTILS.PNDC_instance(web3, chainId, PNDC_ABI);\r\n\r\n  let result = await PNDC_instance.methods\r\n    .batchMint(totalNFT, uriArray, royalties)\r\n    .send({ from: minterAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst burn = async (web3, chainId, minterAddress, tokenId) => {\r\n  const PNDC_instance = await UTILS.PNDC_instance(web3, chainId, PNDC_ABI);\r\n\r\n  let result = await PNDC_instance.methods\r\n    .burn(tokenId)\r\n    .send({ from: minterAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = { mint, batchMint, burn };\r\n","const TokenFactory_ABI = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"previousAdmin\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"newAdmin\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"AdminChanged\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"beacon\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"BeaconUpgraded\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"price\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BidExecuted\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"bidId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"saleId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"sellerAddress\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"buyerAddress\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"price\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"withdrawn\",\r\n            type: \"bool\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibBid.BidOrder\",\r\n        name: \"bid\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    name: \"BidOrderReturn\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"_from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"_tokenAddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"ERC721Deployed\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"seller\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"buyer\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"saleId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"NFTBought\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"saleId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"collectionAddress\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"tokenId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"price\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"directSale\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"bidSale\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"status\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"bidStartTime\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"bidEndTime\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"currentOwner\",\r\n            type: \"address\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibMeta.TokenMeta\",\r\n        name: \"data\",\r\n        type: \"tuple\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"TokenMetaReturn\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"implementation\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Upgraded\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Bid\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n    payable: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Bids\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"bidId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"sellerAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"buyerAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"price\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"withdrawn\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BuyNFT\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n    payable: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_collectionAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_price\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_bidTime\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SellNFT_byBid\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"_tokenMeta\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"collectionAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"price\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"directSale\",\r\n        type: \"bool\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"bidSale\",\r\n        type: \"bool\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"status\",\r\n        type: \"bool\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"bidStartTime\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"bidEndTime\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"currentOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"cancelSale\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionIdTracker\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"collectionToOwner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"collections\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"symbol\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"contractAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"description\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_bidOrderID\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"executeBidOrder\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"onERC721Received\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"ownerToCollections\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_collectionAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_price\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"sellNFT\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newImplementation\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"upgradeTo\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newImplementation\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"upgradeToAndCall\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n    payable: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_bidId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"withdrawBidMoney\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_address\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_feeAddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"initialize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"initialize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"symbol\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"description\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"deployERC721\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nmodule.exports = { TokenFactory_ABI };\r\n","const UTILS = require(\"../common/utils\");\r\nconst { TokenFactory_ABI } = require(\"../../abi/tokenfactory\");\r\n\r\nconst buyNFT = async (web3, chainId, tokenId, buyerAddress, amount) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  let result = await tokenFactoryInstance.methods\r\n    .BuyNFT(tokenId)\r\n    .send({ from: buyerAddress, value: amount });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = {\r\n  buyNFT,\r\n};\r\n","const UTILS = require(\"../common/utils\");\r\nconst { PNDC_ABI } = require(\"../../abi/pndc\");\r\nconst { TokenFactory_ABI } = require(\"../../abi/tokenfactory\");\r\n\r\nconst sellNFT = async (web3, chainId, tokenId, price, sellerAddress) => {\r\n  const PNDC_instance = await UTILS.PNDC_instance(web3, chainId, PNDC_ABI);\r\n\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  await PNDC_instance.methods\r\n    .approve(UTILS.TOKENFACTORY_ADDRESS(chainId), tokenId)\r\n    .send({ from: sellerAddress });\r\n  console.log(\"approved\");\r\n  let result = await tokenFactoryInstance.methods\r\n    .sellNFT(UTILS.PNDC_ADDRESS(chainId), tokenId, price)\r\n    .send({ from: sellerAddress });\r\n\r\n  console.log(result);\r\n\r\n  return result;\r\n};\r\n\r\nconst sellNFTbyBid = async (\r\n  web3,\r\n  chainId,\r\n  tokenId,\r\n  price,\r\n  ownerAddress,\r\n  bidTime\r\n) => {\r\n  const PNDC_instance = await UTILS.PNDC_instance(web3, chainId, PNDC_ABI);\r\n\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  await PNDC_instance.methods\r\n    .approve(UTILS.TOKENFACTORY_ADDRESS(chainId), tokenId)\r\n    .send({ from: ownerAddress });\r\n  let result = await tokenFactoryInstance.methods\r\n    .SellNFT_byBid(UTILS.PNDC_ADDRESS(chainId), tokenId, price, bidTime)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst cancelSale = async (web3, chainId, ownerAddress, saleId) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  let result = await tokenFactoryInstance.methods\r\n    .cancelSale(saleId)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = { sellNFT, sellNFTbyBid, cancelSale };\r\n","const UTILS = require(\"../common/utils\");\r\nconst { TokenFactory_ABI } = require(\"../../abi/tokenfactory\");\r\n\r\nconst bid = async (web3, chainId, tokenId, bidderAddress, price) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  let result = await tokenFactoryInstance.methods\r\n    .Bid(tokenId)\r\n    .send({ from: bidderAddress, value: price });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst acceptBid = async (web3, chainId, tokenId, bidId, ownerAddress) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n  let result = await tokenFactoryInstance.methods\r\n    .executeBidOrder(tokenId, bidId)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst withdrawBid = async (web3, chainId, tokenId, bidId, bidderAddress) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  let result = await tokenFactoryInstance.methods\r\n    .withdrawBidMoney(tokenId, bidId)\r\n    .send({ from: bidderAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = {\r\n  bid,\r\n  acceptBid,\r\n  withdrawBid,\r\n};\r\n","const TokenERC721_ABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"symbol\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"RoyaltiesSetForCollection\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"RoyaltiesSetForTokenId\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"collectionRoyalties\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address payable\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint96\",\r\n        name: \"value\",\r\n        type: \"uint96\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getApproved\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"ownerOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"royaltiesByTokenId\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"set\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"_data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"index\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenByIndex\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"index\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"uri\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"set\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            components: [\r\n              {\r\n                internalType: \"address payable\",\r\n                name: \"account\",\r\n                type: \"address\",\r\n              },\r\n              {\r\n                internalType: \"uint96\",\r\n                name: \"value\",\r\n                type: \"uint96\",\r\n              },\r\n            ],\r\n            internalType: \"struct LibShare.Share[]\",\r\n            name: \"royalties\",\r\n            type: \"tuple[]\",\r\n          },\r\n        ],\r\n        internalType: \"struct TokenERC721.RoyaltiesSet\",\r\n        name: \"royaltiesSet\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    name: \"safeMint\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_totalNft\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"string[]\",\r\n        name: \"_uri\",\r\n        type: \"string[]\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"set\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            components: [\r\n              {\r\n                internalType: \"address payable\",\r\n                name: \"account\",\r\n                type: \"address\",\r\n              },\r\n              {\r\n                internalType: \"uint96\",\r\n                name: \"value\",\r\n                type: \"uint96\",\r\n              },\r\n            ],\r\n            internalType: \"struct LibShare.Share[]\",\r\n            name: \"royalties\",\r\n            type: \"tuple[]\",\r\n          },\r\n        ],\r\n        internalType: \"struct TokenERC721.RoyaltiesSet\",\r\n        name: \"royaltiesSet\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    name: \"batchMint\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"burn\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"set\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            components: [\r\n              {\r\n                internalType: \"address payable\",\r\n                name: \"account\",\r\n                type: \"address\",\r\n              },\r\n              {\r\n                internalType: \"uint96\",\r\n                name: \"value\",\r\n                type: \"uint96\",\r\n              },\r\n            ],\r\n            internalType: \"struct LibShare.Share[]\",\r\n            name: \"royalties\",\r\n            type: \"tuple[]\",\r\n          },\r\n        ],\r\n        internalType: \"struct TokenERC721.RoyaltiesSet\",\r\n        name: \"royaltiesSet\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    name: \"setRoyaltiesByTokenId\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"setRoyaltiesForCollection\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getRoyalties\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenURI\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"interfaceId\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    name: \"supportsInterface\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nmodule.exports = { TokenERC721_ABI };\r\n","const UTILS = require(\"../common/utils\");\r\nconst { TokenFactory_ABI } = require(\"../../abi/tokenfactory\");\r\nconst { TokenERC721_ABI } = require(\"../../abi/tokenerc721\");\r\n\r\nconst deployCollection = async (\r\n  web3,\r\n  chainId,\r\n  deployerAddress,\r\n  name,\r\n  symbol,\r\n  description,\r\n  royalties\r\n) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  let result = await tokenFactoryInstance.methods\r\n    .deployERC721(name, symbol, description, royalties)\r\n    .send({ from: deployerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst createInstance = async (web3, collectionAddress) => {\r\n  const tokenERC721Instance = await UTILS.TOKENERC721_instance(\r\n    web3,\r\n    TokenERC721_ABI,\r\n    collectionAddress\r\n  );\r\n\r\n  console.log(tokenERC721Instance);\r\n  return tokenERC721Instance;\r\n};\r\n\r\nconst mint = async (\r\n  web3,\r\n  collectionAddress,\r\n  tokenURI,\r\n  minterAddress,\r\n  royalties\r\n) => {\r\n  const tokenERC721Instance = await createInstance(web3, collectionAddress);\r\n\r\n  const result = await tokenERC721Instance.methods\r\n    .safeMint(minterAddress, tokenURI, [true, royalties])\r\n    .send({ from: minterAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst batchMint = async (\r\n  web3,\r\n  collectionAddress,\r\n  minterAddress,\r\n  totalNFT,\r\n  uriArray,\r\n  royalties\r\n) => {\r\n  const tokenERC721Instance = await createInstance(web3, collectionAddress);\r\n\r\n  const result = await tokenERC721Instance.methods\r\n    .batchMint(totalNFT, uriArray, [true, royalties])\r\n    .send({ from: minterAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst burn = async (web3, collectionAddress, minterAddress, tokenId) => {\r\n  const tokenERC721Instance = await createInstance(web3, collectionAddress);\r\n\r\n  let result = await tokenERC721Instance.methods\r\n    .burn(tokenId)\r\n    .send({ from: minterAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst sellNFT = async (\r\n  web3,\r\n  chainId,\r\n  collectionAddress,\r\n  tokenId,\r\n  price,\r\n  sellerAddress\r\n) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n  const tokenERC721Instance = await createInstance(web3, collectionAddress);\r\n\r\n  await tokenERC721Instance.methods\r\n    .approve(UTILS.TOKENFACTORY_ADDRESS(chainId), tokenId)\r\n    .send({ from: sellerAddress });\r\n\r\n  const result = await tokenFactoryInstance.methods\r\n    .sellNFT(collectionAddress, tokenId, price)\r\n    .send({ from: sellerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst sellNFTbyBid = async (\r\n  web3,\r\n  chainId,\r\n  collectionAddress,\r\n  tokenId,\r\n  price,\r\n  ownerAddress,\r\n  bidTime\r\n) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n  const tokenERC721Instance = await createInstance(web3, collectionAddress);\r\n\r\n  await tokenERC721Instance.methods\r\n    .approve(UTILS.TOKENFACTORY_ADDRESS(chainId), tokenId)\r\n    .send({ from: ownerAddress });\r\n  const result = await tokenFactoryInstance.methods\r\n    .SellNFT_byBid(collectionAddress, tokenId, price, bidTime)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst cancelSale = async (web3, chainId, ownerAddress, saleId) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n  // const tokenERC721Instance = await createInstance(web3, collectionAddress);\r\n\r\n  const result = await tokenFactoryInstance.methods\r\n    .cancelSale(saleId)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst buyNFT = async (web3, chainId, tokenId, buyerAddress, amount) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n  // const tokenERC721Instance = await createInstance(web3, collectionAddress);\r\n\r\n  const result = await tokenFactoryInstance.methods\r\n    .BuyNFT(tokenId)\r\n    .send({ from: buyerAddress, value: amount });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst bid = async (web3, chainId, tokenId, bidderAddress, price) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  const result = await tokenFactoryInstance.methods\r\n    .Bid(tokenId)\r\n    .send({ from: bidderAddress, value: price });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst acceptBid = async (web3, chainId, tokenId, bidId, ownerAddress) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n  const result = await tokenFactoryInstance.methods\r\n    .executeBidOrder(tokenId, bidId)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst withdrawBid = async (web3, chainId, tokenId, bidId, bidderAddress) => {\r\n  const tokenFactoryInstance = await UTILS.TOKENFACTORY_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory_ABI\r\n  );\r\n\r\n  const result = await tokenFactoryInstance.methods\r\n    .withdrawBidMoney(tokenId, bidId)\r\n    .send({ from: bidderAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = {\r\n  deployCollection,\r\n  createInstance,\r\n  mint,\r\n  batchMint,\r\n  burn,\r\n  sellNFT,\r\n  sellNFTbyBid,\r\n  cancelSale,\r\n  buyNFT,\r\n  bid,\r\n  acceptBid,\r\n  withdrawBid,\r\n};\r\n","const UTILS = {\r\n  addressDict: {\r\n    4: {\r\n      PNDC1155_ADDRESS: \"0x364C0667b816a35DB1a83415CAf7c37a19E20277\",\r\n      TOKENFACTORY1155_ADDRESS: \"0xD5BF6DB2E813cA5bD3e34517Bf0cC0AB833F250A\",\r\n    },\r\n    3: {\r\n      PNDC1155_ADDRESS: \"0x201C971C8113B17267D530f841A1F1B617aeFCaC\",\r\n      TOKENFACTORY1155_ADDRESS: \"0x364C0667b816a35DB1a83415CAf7c37a19E20277\",\r\n    },\r\n    97: {\r\n      PNDC1155_ADDRESS: \"0x3649C4aB21ff0E4ADe65330466edb777E6D5072F\",\r\n      TOKENFACTORY1155_ADDRESS: \"0xCc20f45465FC2a18847BD17F011E6FCC657f5907\",\r\n    },\r\n  },\r\n  accounts: async (web3) => {\r\n    return await web3.eth.getAccounts();\r\n  },\r\n  PNDC1155_instance: async (web3, chainId, abi) => {\r\n    return new web3.eth.Contract(abi, UTILS.PNDC1155_ADDRESS(chainId));\r\n  },\r\n  TOKENFACTORY1155_instance: async (web3, chainId, abi) => {\r\n    return new web3.eth.Contract(abi, UTILS.TOKENFACTORY1155_ADDRESS(chainId));\r\n  },\r\n  TOKENERC1155_instance: async (web3, abi, collectionAddress) => {\r\n    return new web3.eth.Contract(abi, collectionAddress);\r\n  },\r\n  PNDC1155_ADDRESS: (id) => {\r\n    return UTILS.addressDict[id].PNDC1155_ADDRESS;\r\n  },\r\n  TOKENFACTORY1155_ADDRESS: (id) => {\r\n    return UTILS.addressDict[id].TOKENFACTORY1155_ADDRESS;\r\n  },\r\n};\r\n\r\nmodule.exports = UTILS;\r\n","const PNDC1155_ABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"uri\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"RoyaltiesSetForTokenId\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256[]\",\r\n        name: \"ids\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256[]\",\r\n        name: \"values\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    name: \"TransferBatch\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"TransferSingle\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"string\",\r\n        name: \"value\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"URI\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"_uris\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address[]\",\r\n        name: \"accounts\",\r\n        type: \"address[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"ids\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    name: \"balanceOfBatch\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"exists\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"royaltiesByTokenId\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address payable\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint96\",\r\n        name: \"value\",\r\n        type: \"uint96\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"ids\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"amounts\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"safeBatchTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"interfaceId\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    name: \"supportsInterface\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"uri\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"newuri\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"setURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"uri\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"mint\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"burn\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getRoyalties\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n];\r\n\r\nmodule.exports = { PNDC1155_ABI };\r\n","const UTILS = require(\"../common/utils\");\r\nconst { PNDC1155_ABI } = require(\"../../abi/pndc1155\");\r\n\r\nconst mint = async (\r\n  web3,\r\n  chainId,\r\n  minterAddress,\r\n  tokenAmount,\r\n  tokenURI,\r\n  royalties\r\n) => {\r\n  const PNDC1155_instance = await UTILS.PNDC1155_instance(\r\n    web3,\r\n    chainId,\r\n    PNDC1155_ABI\r\n  );\r\n\r\n  let result = await PNDC1155_instance.methods\r\n    .mint(minterAddress, tokenAmount, [], tokenURI, royalties)\r\n    .send({ from: minterAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst burn = async (web3, chainId, ownerAddress, tokenId, tokenAmount) => {\r\n  const PNDC1155_instance = await UTILS.PNDC1155_instance(\r\n    web3,\r\n    chainId,\r\n    PNDC1155_ABI\r\n  );\r\n\r\n  let result = await PNDC1155_instance.methods\r\n    .burn(ownerAddress, tokenId, tokenAmount)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = { mint, burn };\r\n","const TokenFactory1155_ABI = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"previousAdmin\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"newAdmin\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"AdminChanged\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"beacon\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"BeaconUpgraded\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"price\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BidExecuted\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"bidId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"numberOfTokens\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"sellerAddress\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"buyerAddress\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"price\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"withdrawn\",\r\n            type: \"bool\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibBid1155.BidOrder\",\r\n        name: \"bid\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    name: \"BidOrderReturn\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"_from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"_tokenAddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"ERC1155Deployed\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"seller\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"buyer\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"NFTBought\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"saleId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"collectionAddress\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"tokenId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"numberOfTokens\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"price\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"directSale\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"bidSale\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"status\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"currentOwner\",\r\n            type: \"address\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibMeta1155.TokenMeta\",\r\n        name: \"data\",\r\n        type: \"tuple\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"TokenMetaReturn\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"implementation\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Upgraded\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Bid\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n    payable: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Bids\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"bidId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"numberOfTokens\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"sellerAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"buyerAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"price\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"withdrawn\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BuyNFT\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n    payable: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_collectionAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_price\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SellNFT_byBid\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"_tokenMeta\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"collectionAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"numberOfTokens\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"price\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"directSale\",\r\n        type: \"bool\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"bidSale\",\r\n        type: \"bool\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"status\",\r\n        type: \"bool\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"currentOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"cancelSale\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionIdTracker\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"collectionToOwner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"collections\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"uri\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"contractAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"description\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_bidOrderID\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"executeBidOrder\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"onERC1155BatchReceived\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"onERC1155Received\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"ownerToCollections\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_collectionAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_price\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"sellNFT\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"interfaceId\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    name: \"supportsInterface\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n    constant: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newImplementation\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"upgradeTo\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newImplementation\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"upgradeToAndCall\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n    payable: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_saleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_bidId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"withdrawBidMoney\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_address\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_feeAddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"initialize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"initialize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_uri\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"description\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"deployERC1155\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nmodule.exports = { TokenFactory1155_ABI };\r\n","const UTILS = require(\"../common/utils\");\r\nconst { TokenFactory1155_ABI } = require(\"../../abi/tokenfactory1155\");\r\n\r\nconst buyNFT = async (\r\n  web3,\r\n  chainId,\r\n  saleId,\r\n  buyerAddress,\r\n  amount,\r\n  tokenAmount\r\n) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  let result = await tokenFactory1155Instance.methods\r\n    .BuyNFT(saleId, tokenAmount)\r\n    .send({ from: buyerAddress, value: amount });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = {\r\n  buyNFT,\r\n};\r\n","const UTILS = require(\"../common/utils\");\r\nconst { PNDC1155_ABI } = require(\"../../abi/pndc1155\");\r\nconst { TokenFactory1155_ABI } = require(\"../../abi/tokenfactory1155\");\r\n\r\nconst sellNFT = async (\r\n  web3,\r\n  chainId,\r\n  tokenId,\r\n  price,\r\n  sellerAddress,\r\n  tokenAmount\r\n) => {\r\n  const PNDC1155_instance = await UTILS.PNDC1155_instance(\r\n    web3,\r\n    chainId,\r\n    PNDC1155_ABI\r\n  );\r\n\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  await PNDC1155_instance.methods\r\n    .setApprovalForAll(UTILS.TOKENFACTORY1155_ADDRESS(chainId), true)\r\n    .send({ from: sellerAddress });\r\n  console.log(\"approved\");\r\n  let result = await tokenFactory1155Instance.methods\r\n    .sellNFT(UTILS.PNDC1155_ADDRESS(chainId), tokenId, price, tokenAmount)\r\n    .send({ from: sellerAddress });\r\n\r\n  console.log(result);\r\n\r\n  return result;\r\n};\r\n\r\nconst sellNFTbyBid = async (\r\n  web3,\r\n  chainId,\r\n  tokenId,\r\n  price,\r\n  ownerAddress,\r\n  tokenAmount\r\n) => {\r\n  const PNDC1155_instance = await UTILS.PNDC1155_instance(\r\n    web3,\r\n    chainId,\r\n    PNDC1155_ABI\r\n  );\r\n\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  await PNDC1155_instance.methods\r\n    .setApprovalForAll(UTILS.TOKENFACTORY1155_ADDRESS(chainId), true)\r\n    .send({ from: ownerAddress });\r\n  let result = await tokenFactory1155Instance.methods\r\n    .SellNFT_byBid(UTILS.PNDC1155_ADDRESS(chainId), tokenId, price, tokenAmount)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst cancelSale = async (web3, chainId, ownerAddress, saleId) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  let result = await tokenFactory1155Instance.methods\r\n    .cancelSale(saleId)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = { sellNFT, sellNFTbyBid, cancelSale };\r\n","const UTILS = require(\"../common/utils\");\r\nconst { TokenFactory1155_ABI } = require(\"../../abi/tokenfactory1155\");\r\n\r\nconst bid = async (\r\n  web3,\r\n  chainId,\r\n  saleId,\r\n  bidderAddress,\r\n  price,\r\n  tokenAmount\r\n) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  let result = await tokenFactory1155Instance.methods\r\n    .Bid(saleId, tokenAmount)\r\n    .send({ from: bidderAddress, value: price });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst acceptBid = async (web3, chainId, tokenId, bidId, ownerAddress) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n  let result = await tokenFactory1155Instance.methods\r\n    .executeBidOrder(tokenId, bidId)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst withdrawBid = async (web3, chainId, saleId, bidId, bidderAddress) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  let result = await tokenFactory1155Instance.methods\r\n    .withdrawBidMoney(saleId, bidId)\r\n    .send({ from: bidderAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = {\r\n  bid,\r\n  acceptBid,\r\n  withdrawBid,\r\n};\r\n","const TokenERC1155_ABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"uri\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"RoyaltiesSetForCollection\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        indexed: false,\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"RoyaltiesSetForTokenId\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256[]\",\r\n        name: \"ids\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256[]\",\r\n        name: \"values\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    name: \"TransferBatch\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"TransferSingle\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"string\",\r\n        name: \"value\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"URI\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address[]\",\r\n        name: \"accounts\",\r\n        type: \"address[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"ids\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    name: \"balanceOfBatch\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"collectionRoyalties\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address payable\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint96\",\r\n        name: \"value\",\r\n        type: \"uint96\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"exists\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"royaltiesByTokenId\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"set\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"ids\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"amounts\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"safeBatchTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"interfaceId\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    name: \"supportsInterface\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"uri\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"newuri\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"setURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_uri\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"setTokenUri\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_uri\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"mint\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"burn\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"bool\",\r\n            name: \"set\",\r\n            type: \"bool\",\r\n          },\r\n          {\r\n            components: [\r\n              {\r\n                internalType: \"address payable\",\r\n                name: \"account\",\r\n                type: \"address\",\r\n              },\r\n              {\r\n                internalType: \"uint96\",\r\n                name: \"value\",\r\n                type: \"uint96\",\r\n              },\r\n            ],\r\n            internalType: \"struct LibShare.Share[]\",\r\n            name: \"royalties\",\r\n            type: \"tuple[]\",\r\n          },\r\n        ],\r\n        internalType: \"struct TokenERC1155.RoyaltiesSet\",\r\n        name: \"royaltiesSet\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    name: \"setRoyaltiesByTokenId\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"royalties\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    name: \"setRoyaltiesForCollection\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getRoyalties\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"account\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint96\",\r\n            name: \"value\",\r\n            type: \"uint96\",\r\n          },\r\n        ],\r\n        internalType: \"struct LibShare.Share[]\",\r\n        name: \"\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nmodule.exports = { TokenERC1155_ABI };\r\n","const UTILS = require(\"../common/utils\");\r\nconst { TokenFactory1155_ABI } = require(\"../../abi/tokenfactory1155\");\r\nconst { TokenERC1155_ABI } = require(\"../../abi/tokenerc1155\");\r\n\r\nconst deployCollection = async (\r\n  web3,\r\n  chainId,\r\n  deployerAddress,\r\n  uri,\r\n  description,\r\n  royalties\r\n) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  let result = await tokenFactory1155Instance.methods\r\n    .deployERC1155(uri, description, royalties)\r\n    .send({ from: deployerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst createInstance = async (web3, collectionAddress) => {\r\n  const tokenERC1155Instance = await UTILS.TOKENERC1155_instance(\r\n    web3,\r\n    TokenERC1155_ABI,\r\n    collectionAddress\r\n  );\r\n\r\n  console.log(tokenERC1155Instance);\r\n  return tokenERC1155Instance;\r\n};\r\n\r\nconst mint = async (\r\n  web3,\r\n  collectionAddress,\r\n  tokenId,\r\n  tokenAmount,\r\n  tokenURI,\r\n  minterAddress\r\n) => {\r\n  const tokenERC1155Instance = await createInstance(web3, collectionAddress);\r\n\r\n  const result = await tokenERC1155Instance.methods\r\n    .mint(minterAddress, tokenId, tokenAmount, tokenURI, [])\r\n    .send({ from: minterAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst burn = async (\r\n  web3,\r\n  collectionAddress,\r\n  ownerAddress,\r\n  tokenId,\r\n  tokenAmount\r\n) => {\r\n  const tokenERC1155Instance = await createInstance(web3, collectionAddress);\r\n\r\n  let result = await tokenERC1155Instance.methods\r\n    .burn(ownerAddress, tokenId, tokenAmount)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst sellNFT = async (\r\n  web3,\r\n  chainId,\r\n  collectionAddress,\r\n  tokenId,\r\n  price,\r\n  sellerAddress,\r\n  tokenAmount\r\n) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n  const tokenERC1155Instance = await createInstance(web3, collectionAddress);\r\n\r\n  await tokenERC1155Instance.methods\r\n    .setApprovalForAll(UTILS.TOKENFACTORY1155_ADDRESS(chainId), true)\r\n    .send({ from: sellerAddress });\r\n\r\n  const result = await tokenFactory1155Instance.methods\r\n    .sellNFT(collectionAddress, tokenId, price, tokenAmount)\r\n    .send({ from: sellerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst sellNFTbyBid = async (\r\n  web3,\r\n  chainId,\r\n  collectionAddress,\r\n  tokenId,\r\n  price,\r\n  ownerAddress,\r\n  tokenAmount\r\n) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n  const tokenERC1155Instance = await createInstance(web3, collectionAddress);\r\n\r\n  await tokenERC1155Instance.methods\r\n    .setApprovalForAll(UTILS.TOKENFACTORY1155_ADDRESS(chainId), true)\r\n    .send({ from: ownerAddress });\r\n  const result = await tokenFactory1155Instance.methods\r\n    .SellNFT_byBid(collectionAddress, tokenId, price, tokenAmount)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst cancelSale = async (web3, chainId, ownerAddress, saleId) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  const result = await tokenFactory1155Instance.methods\r\n    .cancelSale(saleId)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst buyNFT = async (\r\n  web3,\r\n  chainId,\r\n  saleId,\r\n  buyerAddress,\r\n  amount,\r\n  tokenAmount\r\n) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  const result = await tokenFactory1155Instance.methods\r\n    .BuyNFT(saleId, tokenAmount)\r\n    .send({ from: buyerAddress, value: amount });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst bid = async (\r\n  web3,\r\n  chainId,\r\n  saleId,\r\n  bidderAddress,\r\n  price,\r\n  tokenAmount\r\n) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  const result = await tokenFactory1155Instance.methods\r\n    .Bid(saleId, tokenAmount)\r\n    .send({ from: bidderAddress, value: price });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst acceptBid = async (web3, chainId, saleId, bidId, ownerAddress) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n  const result = await tokenFactory1155Instance.methods\r\n    .executeBidOrder(saleId, bidId)\r\n    .send({ from: ownerAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nconst withdrawBid = async (web3, chainId, saleId, bidId, bidderAddress) => {\r\n  const tokenFactory1155Instance = await UTILS.TOKENFACTORY1155_instance(\r\n    web3,\r\n    chainId,\r\n    TokenFactory1155_ABI\r\n  );\r\n\r\n  const result = await tokenFactory1155Instance.methods\r\n    .withdrawBidMoney(saleId, bidId)\r\n    .send({ from: bidderAddress });\r\n\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nmodule.exports = {\r\n  deployCollection,\r\n  createInstance,\r\n  mint,\r\n  burn,\r\n  sellNFT,\r\n  sellNFTbyBid,\r\n  cancelSale,\r\n  buyNFT,\r\n  bid,\r\n  acceptBid,\r\n  withdrawBid,\r\n};\r\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","module.exports = {\n  \"version\": \"0.24.0\"\n};","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","const axios = require(\"axios\");\r\nconst FormData = require(\"form-data\");\r\n\r\nconst pinFileToIPFS = (file, description, pinataApiKey, pinataSecretApiKey) => {\r\n  const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n\r\n  let data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  const metadata = JSON.stringify({\r\n    name: file.name,\r\n    keyvalues: {\r\n      name: file.name,\r\n      description: description,\r\n    },\r\n  });\r\n  data.append(\"pinataMetadata\", metadata);\r\n\r\n  return axios\r\n    .post(url, data, {\r\n      maxBodyLength: \"Infinity\", //this is needed to prevent axios from erroring out with large files\r\n      headers: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\r\n        pinata_api_key: pinataApiKey,\r\n        pinata_secret_api_key: pinataSecretApiKey,\r\n      },\r\n    })\r\n    .then(function (response) {\r\n      console.log(\"Uploaded\", response);\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"Error\", error);\r\n    });\r\n};\r\n\r\nconst pinJSONToIPFS = (pinataApiKey, pinataSecretApiKey, JSONBody) => {\r\n  const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\r\n  let wrapJSON = {\r\n    pinataContent: JSONBody,\r\n  };\r\n  return axios\r\n    .post(url, wrapJSON, {\r\n      headers: {\r\n        pinata_api_key: pinataApiKey,\r\n        pinata_secret_api_key: pinataSecretApiKey,\r\n      },\r\n    })\r\n    .then(function (response) {\r\n      console.log(\"JSONToIPFS\", response);\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nmodule.exports = { pinFileToIPFS, pinJSONToIPFS };\r\n","const Mint721 = require(\"./erc721/src/nft/mint\");\r\nconst Buy721 = require(\"./erc721/src/order/buy\");\r\nconst Sell721 = require(\"./erc721/src/order/sell\");\r\nconst Bid721 = require(\"./erc721/src/order/Bid\");\r\nconst Collection721 = require(\"./erc721/src/collection/collection\");\r\nconst Mint1155 = require(\"./erc1155/src/nft/mint\");\r\nconst Buy1155 = require(\"./erc1155/src/order/buy\");\r\nconst Sell1155 = require(\"./erc1155/src/order/sell\");\r\nconst Bid1155 = require(\"./erc1155/src/order/Bid\");\r\nconst Collection1155 = require(\"./erc1155/src/collection/collection\");\r\nconst Pinata = require(\"./pinata/pinata\");\r\n\r\nexport function createPandoraExpressSDK() {\r\n  return {\r\n    erc721: {\r\n      order: {\r\n        sellNFT: Sell721.sellNFT,\r\n        sellNFTByBid: Sell721.sellNFTbyBid,\r\n        cancelSale: Sell721.cancelSale,\r\n        buyNFT: Buy721.buyNFT,\r\n        acceptBid: Bid721.acceptBid,\r\n        bid: Bid721.bid,\r\n        withdrawBid: Bid721.withdrawBid,\r\n      },\r\n      nft: {\r\n        mint: Mint721.mint,\r\n        batchMint: Mint721.batchMint,\r\n        burn: Mint721.burn,\r\n      },\r\n      collection: {\r\n        createCollection: Collection721.deployCollection,\r\n        createInstance: Collection721.createInstance,\r\n        mint: Collection721.mint,\r\n        batchMint: Collection721.batchMint,\r\n        burn: Collection721.burn,\r\n        sellNFT: Collection721.sellNFT,\r\n        sellNFTByBid: Collection721.sellNFTbyBid,\r\n        cancelSale: Collection721.cancelSale,\r\n        buyNFT: Collection721.buyNFT,\r\n        acceptBid: Collection721.acceptBid,\r\n        bid: Collection721.bid,\r\n        withdrawBid: Collection721.withdrawBid,\r\n      },\r\n    },\r\n    erc1155: {\r\n      order: {\r\n        sellNFT: Sell1155.sellNFT,\r\n        sellNFTByBid: Sell1155.sellNFTbyBid,\r\n        cancelSale: Sell1155.cancelSale,\r\n        buyNFT: Buy1155.buyNFT,\r\n        acceptBid: Bid1155.acceptBid,\r\n        bid: Bid1155.bid,\r\n        withdrawBid: Bid1155.withdrawBid,\r\n      },\r\n      nft: {\r\n        mint: Mint1155.mint,\r\n        burn: Mint1155.burn,\r\n      },\r\n      collection: {\r\n        createCollection: Collection1155.deployCollection,\r\n        createInstance: Collection1155.createInstance,\r\n        mint: Collection1155.mint,\r\n        burn: Collection1155.burn,\r\n        sellNFT: Collection1155.sellNFT,\r\n        sellNFTByBid: Collection1155.sellNFTbyBid,\r\n        cancelSale: Collection1155.cancelSale,\r\n        buyNFT: Collection1155.buyNFT,\r\n        acceptBid: Collection1155.acceptBid,\r\n        bid: Collection1155.bid,\r\n        withdrawBid: Collection1155.withdrawBid,\r\n      },\r\n    },\r\n    pinata: {\r\n      upload: Pinata.pinFileToIPFS,\r\n      pinJSON: Pinata.pinJSONToIPFS,\r\n    },\r\n  };\r\n}\r\n","//Import createPandoraExpressSDK from SDK\r\nconst { createPandoraExpressSDK } = require(\"pandora-express\");\r\nconst pandoraSDK = createPandoraExpressSDK();\r\n\r\n//Connecting with Metamask wallet.\r\nconst init = async () => {\r\n//check if metamask is present\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum);\r\n    await window.ethereum.enable();\r\n    console.log(\"Connected\");\r\n  } else {\r\n    alert(\"Metamask not found\");\r\n  }\r\n};\r\n\r\nconst mintNft = async () => {\r\n    //get current account address\r\n      const accounts = await web3.eth.getAccounts();\r\n    //Get ChainID of current account\r\n      const chainId = await web3.eth.net.getId();\r\n    //Mint NFT using SDK erc721 nft mint\r\n     await pandoraSDK.erc721.nft.mint(web3, chainId, accounts[0], itemURI.value, [\r\n      [accounts[0], 100],\r\n    ]);\r\n    };\r\n\r\n    const sellNft = async () => {\r\n        const accounts = await web3.eth.getAccounts();\r\n        const chainId = await web3.eth.net.getId();\r\n        console.log(chainId);\r\n        await pandoraSDK.erc721.order.sellNFT(\r\n          web3,\r\n          chainId,\r\n          sellItemTokenId.value,\r\n          sellItemPrice.value,\r\n          accounts[0]\r\n         );\r\n        };\r\n\r\n        const buyNft = async () => {\r\n            const accounts = await web3.eth.getAccounts();\r\n            const chainId = await web3.eth.net.getId();\r\n            console.log(chainId);\r\n            await pandoraSDK.erc721.order.buyNFT(\r\n              web3,\r\n              chainId,\r\n              buyItemSaleId.value,\r\n              accounts[0],\r\n              buyItemAmmount.value\r\n             );\r\n            };\r\n\r\n            const itemURI = document.getElementById(\"txtCreateItemURI\");\r\n\r\nconst createItemButton = document.getElementById(\"btnCreateItem\");\r\ncreateItemButton.onclick = mintNft;\r\n\r\nconst itemURI1 = document.getElementById(\"txtCreateItemURI1\");\r\nconst itemURI2 = document.getElementById(\"txtCreateItemURI2\");\r\n\r\n//const createItemsButton = document.getElementById(\"btnCreateItemInBatch\");\r\n//createItemsButton.onclick = batchMintNft;\r\n\r\nconst sellItemTokenId = document.getElementById(\"numSellItemTokenId\");\r\nconst sellItemPrice = document.getElementById(\"numSellItemPrice\");\r\n\r\nconst sellItemButton = document.getElementById(\"btnSellItem\");\r\nsellItemButton.onclick = sellNft;\r\n\r\nconst auctionItemTokenId = document.getElementById(\"numAuctionItemTokenId\");\r\nconst auctionItemPrice = document.getElementById(\"numAuctionItemPrice\");\r\nconst auctionItemTime = document.getElementById(\"numAuctionItemTime\");\r\n\r\n//const auctionItemButton = document.getElementById(\"btnAuctionItem\");\r\n//auctionItemButton.onclick = auctionNft;\r\n\r\nconst buyItemSaleId = document.getElementById(\"numBuyItem\");\r\nconst buyItemAmmount = document.getElementById(\"numBuyItemAmmount\");\r\nnumBuyItemAmmount;\r\n\r\nconst buyItemButton = document.getElementById(\"btnBuyItem\");\r\nbuyItemButton.onclick = buyNft;\r\n\r\ninit();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}